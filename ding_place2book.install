<?php

/**
 * @file
 * Installation file for ding_place2book module.
 */

/**
 * Implementation of hook_schema().
 */
function ding_place2book_schema() {
  return array(
    'ding_place2book' => array(
      'description' => t('Table to hold information about Place2Book tickets.'),
      'fields' => array(
        'nid' => array(
          'description' => t('The foreign key to {node}.nid'),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'place2book_id' => array(
          'description' => t('An ID-reference to the corresponding event on the ticket booking service'),
          'type' => 'int',
          'unsigned' => FALSE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'capacity' => array(
          'description' => t('The maximum capacity on the Place2Book event. 0 is interpreted as unlimited capacity on the event (default)'),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'maintain_copy' => array(
          'description' => t('Event is created and updated on Place2Book'),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 1,
        ),
        'kultunaut_export' => array(
          'description' => t('Place2Book forwards the event to kultunaut'),
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'primary key' => array('nid'),
    ),
  );
}

/**
 * Implementation of hook_install().
 */
function ding_place2book_install() {
  drupal_install_schema('ding_place2book');

  // Update moduel weight to make it heavier then CCK field groups.
  // See update_6200() below.
  update_sql("UPDATE {system} SET weight = 10 WHERE name = 'ding_place2book';");
}

/**
 * Implementation of hook_uninstall().
 */
function ding_place2book_uninstall() {
  drupal_uninstall_schema('ding_place2book');
  variable_del('ding_place2book');
  variable_del('ding_place2book_libraries');
  variable_del('ding_place2book_event_nodes');
}

/**
 * REVIEW: Missign description.
 */
function ding_place2book_update_6100() {
  $ret = array();
  db_add_field($ret, 'ding_place2book', 'capacity', array(
      'description' => t('The maximum capacity on the Place2Book event. 0 interprets as unlimited capacity on the event (default)'),
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => "0"
    ));

  db_add_field($ret, 'ding_place2book', 'kultunaut_export', array(
      'description' => t('Place2Book forwards the event to kultunaut'),
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => "0"
    ));

  return $ret;
}

/*
 * Set module weight to be heavier than CCK field group module, so this modules
 * hook_form_alter() has access to field groups created by CCK.
 */
function ding_place2book_update_6200() {
  $ret = array();
  $ret[] = update_sql("UPDATE {system} SET weight = 10 WHERE name = 'ding_place2book';");
  return $ret;
}

/**
 * Update settings to match new layout.
 */
function ding_place2book_update_6300() {
  // Update basic settings.
  $admin = user_load(1);
  $place2book = array(
    'service_url' => variable_get('ding_place2book_service_url', ''),
    'event_url' => str_replace('event_api', 'events', variable_get('ding_place2book_service_url', '')),
    'api_key' => variable_get('ding_place2book_api_key', ''),
    'provider_name' => $admin->display_name,
    'provider_mail' => $admin->mail,
  );
  variable_set('ding_place2book', $place2book);

  // Update libray API keys
  $place2book_libraries = array();
  $query = db_query("SELECT n.nid FROM {node} n
                      WHERE type = 'library'");
  while ($row = db_fetch_object($query)) {
    $place2book_libraries[$row->nid] = variable_get('ding_place2book_api_key_' . $row->nid, '');
  }
  variable_set('ding_place2book_libraries', array());

  // Update node event default settings.
  $place2book_event_nodes = array(
    'capacity' => variable_get('ding_place2book_default_capacity', 0),
    'defaults' => variable_get('ding_place2book_defaults', array('maintain_copy' => 'maintain_copy', 'kultunaut_export' => 0)),
  );
  variable_set('ding_place2book_event_nodes', $place2book_event_nodes);

  // Clean up
  variable_del('ding_place2book_api_key');
  variable_del('ding_place2book_service_url');
  foreach ($place2book_libraries as $key => $value) {
    variable_del('ding_place2book_api_key_' . $key);
  }
  variable_del('ding_place2book_default_capacity');
  variable_del('ding_place2book_defaults');

  return array();
}
